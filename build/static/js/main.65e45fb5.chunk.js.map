{"version":3,"sources":["img/pj1.jpg","img/pj2.png","img/pj3.png","img/pj4.jpg","img/pj5.jpg","img/pj6.jpg","img/pj7.jpg","img/pj8.png","img/pj9.png","img/pj10.jpg","img/pj11.jpg","img/pj12.jpg","img/pj13.jpg","img/pj14.jpg","components/card/index.js","home.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Card","props","react_default","a","createElement","style","alignitems","justifycontent","height","borderradius","textalign","position","paddingtop","paddingbottom","paddingLeft","paddingright","float","bordersizing","src","pic","id","onClick","click","home","state","pics","pic1","pic2","pic3","pic4","pic5","pic6","pic7","pic8","pic9","pic10","pic11","pic12","pic13","pic14","ids","score","goal","status","checkwin","_this","clickedpics","console","log","includes","alert","handleclick","setState","ReorderArray","j","x","i","length","Math","floor","random","shuffle","newids","concat","newscore","_this2","this","color","map","singleobj","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_home","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.65e45fb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pj1.8199f186.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pj2.d635b606.png\";","module.exports = __webpack_public_path__ + \"static/media/pj3.665306a1.png\";","module.exports = __webpack_public_path__ + \"static/media/pj4.e3be1658.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pj5.13341404.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pj6.08d0030f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pj7.1c685e7c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pj8.3a6d809b.png\";","module.exports = __webpack_public_path__ + \"static/media/pj9.6cc3d30b.png\";","module.exports = __webpack_public_path__ + \"static/media/pj10.5a708af8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pj11.517dd488.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pj12.b7e6614a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pj13.802da5c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pj14.270c3dae.jpg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport \"./styles.css\"\r\n\r\nexport default function Card(props) {\r\n//    console.log(props)\r\n    // return(\r\n    // <div\r\n    // // className={}\r\n    // style={{\r\n    //     width, height,  \r\n    // }}\r\n    // onClick={() => disabled ? null : handleClick(id)}\r\n    // >\r\n    //     <div className=\"flipper\">\r\n    //         <img\r\n    //         style={{\r\n    //             height, width\r\n    //         }}\r\n    //         className={flipped ? \"front\" : \"back\"}\r\n    //         src={flipped || solved  ? \"/img/${type}.png\" : \"/img/back.png\"}\r\n    //         />\r\n    //         </div>\r\n    //         </div>\r\n    // )\r\n    return(\r\n        <div>\r\n            <img style={{alignitems:'center', justifycontent: 'space around' ,height:'250px',borderradius:'2px',textalign:'left',position:'relative',paddingtop:'1%', paddingbottom:'1%',paddingLeft:'1rem',paddingright:'1rem',float:'left',bordersizing:'border-box'}} src={props.pic} id= {props.id} onClick={()=>{props.click(props.id)}}/>\r\n        </div>\r\n    \r\n\r\n    ) \r\n\r\n}\r\n\r\nCard.propTypes = {\r\n    handleClick: PropTypes.func.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    flipped: PropTypes.bool.isRequired,\r\n    solved: PropTypes.bool.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    width: PropTypes.number.isRequired,\r\n    disabled: PropTypes.bool.isRequired,\r\n    \r\n}","import React from 'react';\r\nimport pic1 from './img/pj1.jpg'\r\nimport pic2 from './img/pj2.png'\r\nimport pic3 from './img/pj3.png'\r\nimport pic4 from './img/pj4.jpg'\r\nimport pic5 from './img/pj5.jpg'\r\nimport pic6 from './img/pj6.jpg'\r\nimport pic7 from './img/pj7.jpg'\r\nimport pic8 from './img/pj8.png'\r\nimport pic9 from './img/pj9.png'\r\nimport pic10 from './img/pj10.jpg'\r\nimport pic11 from './img/pj11.jpg'\r\nimport pic12 from './img/pj12.jpg'\r\nimport pic13 from './img/pj13.jpg'\r\nimport pic14 from './img/pj14.jpg'\r\nimport Card from './components/card/index';\r\nclass home extends React.Component {\r\n state ={\r\n     pics:[{\r\n         id:1,\r\n         pic:pic1\r\n    \r\n     },\r\n     {\r\n         id:2,\r\n         pic:pic2\r\n     },\r\n     {\r\n        id:3,\r\n        pic:pic3\r\n    },\r\n    {\r\n        id:4,\r\n        pic:pic4\r\n    },\r\n    {\r\n        id:5,\r\n        pic:pic5\r\n    },\r\n    {\r\n        id:6,\r\n        pic:pic6\r\n    },\r\n    {\r\n        id:7,\r\n        pic:pic7\r\n    },\r\n    {\r\n        id:8,\r\n        pic:pic8\r\n    },\r\n    {\r\n        id:9,\r\n        pic:pic9\r\n    },\r\n    {\r\n        id:10,\r\n        pic:pic10\r\n    },\r\n    {\r\n        id:11,\r\n        pic:pic11\r\n    },\r\n    {\r\n        id:12,\r\n        pic:pic12\r\n    },\r\n    {\r\n        id:13,\r\n        pic:pic13\r\n    },\r\n    {\r\n        id:14,\r\n        pic:pic14\r\n    },\r\n    ],\r\n    ids:[],\r\n    score: 0,\r\n      goal: 10,\r\n      status: \"\"\r\n }\r\n\r\n\r\n    checkwin = id => {\r\n        let clickedpics = this.state.clickedpics;\r\n    console.log(this.state.ids.includes(id),'this is it')\r\n        if(this.state.ids.includes(id)){\r\n            alert(\"YOU LOSE !!!\")\r\n        //   \r\n          return true\r\n        }\r\n        // else{\r\n        //   clickedpics.push(pics)\r\n    \r\n        //   if(clickedpics.length === 8){\r\n        //     this.setState({score: 10, status: \"You Won! Great Job, Smartie! Click to play again!\", clickedpics: []});\r\n        //     console.log('You Win');\r\n        //     return;\r\n        //   }\r\n    \r\n        //   this.setState({ pics, clickedpics, score: clickedpics.length, status: \" \" });\r\n        // }\r\n    }\r\n handleclick = (id)=> {\r\n     console.log('u got clicked',id)\r\nif(this.checkwin(id)){\r\n    this.setState({ ids: [], score: 0, status:  \"Game Over! You lost. Click to play again!\" });\r\n}else{\r\n\r\n\r\n\r\n\r\n     function shuffle(a) {\r\n        var j, x, i;\r\n        for (i = a.length - 1; i > 0; i--) {\r\n            j = Math.floor(Math.random() * (i + 1));\r\n            x = a[i];\r\n            a[i] = a[j];\r\n            a[j] = x;\r\n        }\r\n        return a;\r\n    }\r\nvar oldArray = this.state.pics\r\nvar ReorderArray = shuffle(oldArray)\r\nvar newids = this.state.ids.concat(id)\r\nvar newscore = this.state.score + 1 \r\n\r\n\r\nthis.setState({\r\n    pics:ReorderArray,\r\n    ids: newids,\r\n    score: newscore\r\n\r\n})\r\n\r\n}\r\n }\r\n \r\n\r\n  render() {\r\n      console.log(this.state,\"src\")\r\n    return (\r\n        <div>\r\n      <h1>Click on the PJ Poster Images ..... Try not to click the same box twice !!!</h1>\r\n      <h1 style={{color:\"white\"}}>score:{this.state.score}</h1>\r\n      {this.state.pics.map((singleobj)=>{\r\n         return<Card pic={singleobj.pic} id= {singleobj.id} click = {this.handleclick}/> \r\n      })}\r\n      \r\n      </div>\r\n\r\n\r\n    );\r\n    \r\n  }\r\n  \r\n  \r\n\r\n  \r\n}\r\n\r\n\r\nexport default home;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport Home from './home'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}